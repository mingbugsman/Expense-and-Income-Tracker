@model X.PagedList.IPagedList<Expense_Tracker_App.Models.NotificationLog>
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Thông báo";   
}
<hr />

<h2>Các thông báo</h2>

<div class="notification-card-list">
    @foreach (var item in Model)
    {
        <div class="notification-card">
            <div class="notification-card-row">
                <span class="notification-label">ID:</span>
                <span>@item.Log_Id</span>
            </div>
            <div class="notification-card-row">
                <span class="notification-label">Nội dung:</span>
                <span class="notification-content">@item.SummaryMessage</span>
            </div>
            <div class="notification-card-row">
                <span class="notification-label">Loại:</span>
                <span>@item.Log_Type_String</span>
            </div>
            <div class="notification-card-row">
                <span class="notification-label">Ngày tạo:</span>
                <span>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
            </div>
            <div class="notification-card-row notification-card-action">
                <button class="btn btn-primary btn-sm toggle-content" onclick="toggleContent(@item.Log_Id)">Xem thêm</button>
            </div>
            <div id="full-content-@item.Log_Id" class="full-content" style="display: none;">
                <div class="notification-card-row">
                    <span class="notification-label">Nội dung đầy đủ:</span>
                    <span class="notification-content">@item.Message</span>
                </div>
            </div>
        </div>
    }
</div>

<div class="pagination-container d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
{
    Display = PagedListDisplayMode.IfNeeded,
    UlElementClasses = new string[] { "pagination", "pagination-lg" },
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
})
</div>

<style>
    .notification-card-list {
        display: flex;
        flex-direction: column;
        gap: 18px;
        margin-bottom: 32px;
    }
    .notification-card {
        background: #23272b;
        color: #f1f1f1;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.18);
        padding: 18px 22px 12px 22px;
        transition: box-shadow 0.2s, background 0.2s;
        border: 1px solid #353a40;
        position: relative;
    }
    .notification-card:hover {
        box-shadow: 0 4px 24px rgba(0,0,0,0.28);
        background: #282c31;
    }
    .notification-card-row {
        display: flex;
        align-items: center;
        margin-bottom: 7px;
        font-size: 1rem;
    }
    .notification-label {
        min-width: 80px;
        font-weight: 600;
        color: #b0b0b0;
        margin-right: 10px;
        font-size: 0.98rem;
    }
    .notification-content {
        flex: 1;
        word-break: break-word;
    }
    .notification-card-action {
        justify-content: flex-end;
        margin-top: 8px;
        margin-bottom: 0;
    }
    .btn-primary.btn-sm {
        background: #3a3f44;
        border: none;
        color: #fff;
        border-radius: 6px;
        padding: 4px 16px;
        font-size: 0.98rem;
    }
    .btn-primary.btn-sm:hover {
        background: #50555a;
        color: #fff;
    }
    .full-content {
        margin-top: 10px;
        padding-top: 10px;
        border-top: 1px solid #353a40;
    }
</style>

<script>
    function toggleContent(id) {
        const fullContent = document.getElementById(`full-content-${id}`);
        const button = document.querySelector(`#full-content-${id}`).previousElementSibling.querySelector('.toggle-content');
        
        if (fullContent.style.display === 'none') {
            fullContent.style.display = 'block';
            button.textContent = 'Thu gọn';
        } else {
            fullContent.style.display = 'none';
            button.textContent = 'Xem thêm';
        }
    }
</script>